# –ì–ª–æ–±–∞–ª—å–Ω—ã–π –ª–æ–≤–µ—Ü web_app_data (–Ω–∞ —Å–ª—É—á–∞–π –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è)
@dp.message(F.web_app_data)
async def webapp_any_state(message: Message, state: FSMContext):
    import json
    try:
        payload = json.loads(message.web_app_data.data)
        color_raw = payload.get("color", "")
        color = BagColor(color_raw)
        await state.update_data(preset_color=color.value)
    except Exception:
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –≤—ã–±–æ—Ä –∏–∑ Mini App. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.")
        return

    data = await state.get_data()
    file_id = data.get("photo_file_id")

    if not file_id:
        # –ï—Å–ª–∏ —Ñ–æ—Ç–æ –µ—â—ë –Ω–µ—Ç ‚Äî –∑–∞–ø–æ–º–Ω–∏–º —Ü–≤–µ—Ç –∏ –ø–æ–ø—Ä–æ—Å–∏–º —Ñ–æ—Ç–æ
        await message.answer("–¶–≤–µ—Ç —Å–æ—Ö—Ä–∞–Ω–∏–ª ‚úÖ –¢–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏ —Ñ–æ—Ç–æ (–∫–∞–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ), –∏ —è —Å–≥–µ–Ω–µ—Ä–∏—Ä—É—é.")
        await state.set_state(GenStates.waiting_photo)
        return

    # –ï—Å–ª–∏ —Ñ–æ—Ç–æ —É–∂–µ –µ—Å—Ç—å ‚Äî –∑–∞–ø—É—Å—Ç–∏–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Å—Ä–∞–∑—É
    try:
        photo_bytes = await download_telegram_file(message.bot, file_id)
    except Exception:
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ñ–æ—Ç–æ. –û—Ç–ø—Ä–∞–≤—å –µ–≥–æ –µ—â—ë —Ä–∞–∑: /start")
        await state.clear()
        return

    gen_bytes = await call_flow_api(photo_bytes, BagColor(color.value), message.from_user.id)
    if not gen_bytes:
        await message.answer("üòî –ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ —Ñ–ª–æ—É. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ –∏–ª–∏ –ø—Ä–∏—à–ª–∏ –¥—Ä—É–≥–æ–µ —Ñ–æ—Ç–æ. /start")
        await state.clear()
        return

    await message.answer_photo(photo=gen_bytes, caption="–ì–æ—Ç–æ–≤–æ! –ï—â—ë –≤–∞—Ä–∏–∞–Ω—Ç ‚Äî /start")
    await state.clear()
