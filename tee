@dp.message(GenStates.waiting_photo, F.photo)
async def got_photo(message: Message, state: FSMContext):
    file_id = message.photo[-1].file_id
    await state.update_data(photo_file_id=file_id)

    data = await state.get_data()
    preset = data.get("preset_color")
    if preset:
        # –ï—Å–ª–∏ —Ü–≤–µ—Ç —É–∂–µ –≤—ã–±—Ä–∞–Ω –≤ Mini App ‚Äî —Å—Ä–∞–∑—É –≥–µ–Ω–µ—Ä–∏–º
        from enum import Enum
        color = BagColor(preset)
        await message.answer(f"–¶–≤–µ—Ç —É–∂–µ –≤—ã–±—Ä–∞–Ω: <b>{COLOR_LABELS[color]}</b>. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ñ–æ—Ç–æ‚Ä¶ ‚è≥")
        try:
            photo_bytes = await download_telegram_file(message.bot, file_id)
            gen_bytes = await call_flow_api(photo_bytes, color, message.from_user.id)
        except Exception:
            gen_bytes = None

        if not gen_bytes:
            await message.answer("üòî –ù–µ –≤—ã—à–ª–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ –ø–æ–∑–∂–µ –∏–ª–∏ –ø—Ä–∏—à–ª–∏ –¥—Ä—É–≥–æ–µ —Ñ–æ—Ç–æ. /start")
            await state.clear()
            return

        await message.answer_photo(photo=gen_bytes, caption="–ì–æ—Ç–æ–≤–æ! –ï—â—ë –≤–∞—Ä–∏–∞–Ω—Ç ‚Äî /start")
        await state.clear()
        return

    # –ò–Ω–∞—á–µ ‚Äî –æ–±—ã—á–Ω—ã–π –ø—É—Ç—å —Å –≤—ã–±–æ—Ä–æ–º —Ü–≤–µ—Ç–∞
    kb = start_keyboard()
    await message.answer(
        "–®–∞–≥ 2 ‚Äî –≤—ã–±–µ—Ä–∏ <b>—Ü–≤–µ—Ç —Å—É–º–∫–∏</b>:\n–ú–æ–∂–Ω–æ –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ –∏–ª–∏ –≤ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.",
        reply_markup=kb or ReplyKeyboardRemove(),
    )
    await message.answer("–ë—ã—Å—Ç—Ä—ã–π –≤—ã–±–æ—Ä —Ü–≤–µ—Ç–∞:", reply_markup=color_keyboard())
    await state.set_state(GenStates.waiting_color)
